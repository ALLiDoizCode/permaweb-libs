{
  "version": 3,
  "sources": ["../node_modules/process/browser.js", "../src/index.ts", "../src/helpers/index.ts", "../src/helpers/config.ts", "../src/helpers/endpoints.ts", "../src/helpers/utils.ts", "../src/helpers/types.ts", "../src/common/index.ts", "../src/common/ao.ts", "../src/common/gql.ts", "../src/common/arweave.ts", "../src/services/index.ts", "../src/services/assets.ts", "../src/services/collections.ts", "../src/services/comments.ts", "../src/services/profiles.ts", "../src/services/zones.ts"],
  "sourcesContent": ["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n", "import { Buffer } from 'buffer';\n\nimport * as Helpers from 'helpers';\n\nimport * as Common from './common';\nimport * as Services from './services';\n\n/* Used for build - Do not remove ! */\nif (!globalThis.Buffer) globalThis.Buffer = Buffer;\n\nfunction init(deps: Helpers.DependencyType) {\n\treturn {\n\t\t/* Zones */\n\t\tcreateZone: Services.createZoneWith(deps),\n\t\tupdateZone: Services.updateZoneWith(deps),\n\t\taddToZone: Services.addToZoneWith(deps),\n\t\tgetZone: Services.getZoneWith(deps),\n\t\t/* Profiles */\n\t\tcreateProfile: Services.createProfileWith(deps),\n\t\tupdateProfile: Services.updateProfileWith(deps),\n\t\tgetProfileById: Services.getProfileByIdWith(deps),\n\t\tgetProfileByWalletAddress: Services.getProfileByWalletAddressWith(deps),\n\t\t/* Assets */\n\t\tcreateAtomicAsset: Services.createAtomicAssetWith(deps),\n\t\tgetAtomicAsset: Services.getAtomicAssetWith(deps),\n\t\tgetAtomicAssets: Services.getAtomicAssets,\n\t\t/* Comments */\n\t\tcreateComment: Services.createCommentWith(deps),\n\t\tgetComment: Services.getCommentWith(deps),\n\t\tgetComments: Services.getCommentsWith(deps),\n\t\t/* Collections */\n\t\tcreateCollection: Services.createCollectionWith(deps),\n\t\tupdateCollectionAssets: Services.updateCollectionAssetsWith(deps),\n\t\tgetCollection: Services.getCollectionWith(deps),\n\t\tgetCollections: Services.getCollectionsWith(deps),\n\t\t/* Common */\n\t\tresolveTransaction: Common.resolveTransactionWith(deps),\n\t\tgetGQLData: Common.getGQLData,\n\t\tgetAggregatedGQLData: Common.getAggregatedGQLData,\n\t\tcreateProcess: Common.aoCreateProcessWith(deps),\n\t\treadProcess: Common.aoDryRunWith(deps),\n\t\tsendMessage: Common.aoSendWith(deps),\n\t\t/* Utils */\n\t\tmapFromProcessCase: Helpers.mapFromProcessCase,\n\t\tmapToProcessCase: Helpers.mapToProcessCase,\n\t};\n}\n\nexport default { init };\n\nexport * from './helpers/types';\n", "export * from './config';\nexport * from './endpoints';\nexport * from './types';\nexport * from './utils';\n", "export const AO = {\n\tmodule: 'Do_Uc2Sju_ffp6Ev0AnLVdPtot15rvMjP-a9VVaA5fM',\n\tscheduler: '_GQ33BkPtZrqxA84vM8Zk-N2aO0toNNu_C-l-rawrBA',\n\tmu: 'fcoN_xJeisVsPXA-trzVAuIiqO3ydLQxM-L4XbrQKzY',\n\tsrc: {\n\t\tasset: 'XYz8buLR5LQdhOOzWuCt9kBjoXHMowouWpXcGm9wdEE',\n\t\tcollection: 'aHN0YxA7Th1OQdtgv0slWv9LMrvYukvNgWdkotJsML0',\n\t\tcollectionActivity: 'k8K8WIJb5kXOVvZRFXF5GIZW-7b2NtaTOd6G-E5MF0k',\n\t\tprofile: 'WBhJpPafkykqZZgTr7TAsz48RKG4vbOEAH4rZ3JxIQ8',\n\t\tzone: 'M9G2B9Uvk8VK1pxloESeT4XScguRKSzLyd4as1HFOJ8',\n\t},\n\tcollectionRegistry: 'TFWDmf8a3_nw43GCm_CuYlYoylHAjCcFGbgHfDaGcsg',\n\tprofileRegistry: 'SNy4m-DrqxWl01YqGM4sxI8qCni-58re8uuJLvZPypY'\n};\n\nexport const CONTENT_TYPES: { [key: string]: { type: string; serialize: (data: any) => any } } = {\n\t'application/json': {\n\t\ttype: 'application/json',\n\t\tserialize: (data: any) => JSON.stringify(data),\n\t},\n};\n\nexport const GATEWAYS = {\n\tarweave: 'arweave.net',\n\tgoldsky: 'arweave-search.goldsky.com',\n};\n\nexport const LICENSES = {\n\tudl: {\n\t\tlabel: 'Universal Data License',\n\t\taddress: 'dE0rmDfl9_OWjkDznNEXHaSO_JohJkRolvMzaCroUdw',\n\t},\n};\n\nexport const TAGS = {\n\tkeys: {\n\t\taccess: 'Access-Fee',\n\t\tans110: {\n\t\t\ttitle: 'Title',\n\t\t\tdescription: 'Description',\n\t\t\ttopic: 'Topic:*',\n\t\t\ttype: 'Type',\n\t\t\timplements: 'Implements',\n\t\t\tlicense: 'License',\n\t\t},\n\t\tassetType: 'Asset-Type',\n\t\tbanner: 'Banner',\n\t\tbootloader: 'Bootloader',\n\t\tbootloaderInit: 'On-Boot',\n\t\tcollectionId: 'Collection-Id',\n\t\tcollectionName: 'Collection-Name',\n\t\tcommericalUse: 'Commercial-Use',\n\t\tcontentType: 'Content-Type',\n\t\tcreator: 'Creator',\n\t\tcurrency: 'Currency',\n\t\tdataModelTraining: 'Data-Model-Training',\n\t\tdataProtocol: 'Data-Protocol',\n\t\tdateCreated: 'Date-Created',\n\t\tderivations: 'Derivations',\n\t\tdescription: 'Description',\n\t\tdisplayName: 'Display-Name',\n\t\thandle: 'Handle',\n\t\timplements: 'Implements',\n\t\tinitialOwner: 'Initial-Owner',\n\t\tlicense: 'License',\n\t\tname: 'Name',\n\t\tpaymentAddress: 'Payment-Address',\n\t\tpaymentMode: 'Payment-Mode',\n\t\tprofileCreator: 'Profile-Creator',\n\t\tprofileIndex: 'Profile-Index',\n\t\tprotocolName: 'Protocol-Name',\n\t\trenderWith: 'Render-With',\n\t\tthumbnail: 'Thumbnail',\n\t\ttitle: 'Title',\n\t\ttopic: 'Topic',\n\t\ttype: 'Type',\n\t\tzoneType: 'Zone-Type',\n\t},\n\tvalues: {\n\t\tdocument: 'Document',\n\t},\n};\n\nexport const UPLOAD = {\n\tnode1: 'https://up.arweave.net',\n\tnode2: 'https://turbo.ardrive.io',\n\tbatchSize: 1,\n\tchunkSize: 7500000,\n\tdispatchUploadSize: 100 * 1024,\n};\n", "import { checkValidAddress } from './utils';\n\nconst arweaveEndpoint = 'https://arweave.net';\n\nexport function getARBalanceEndpoint(walletAddress: string) {\n\treturn `${arweaveEndpoint}/wallet/${walletAddress}/balance`;\n}\n\nexport function getTxEndpoint(txId: string) {\n\treturn `${arweaveEndpoint}/${txId}`;\n}\n\nexport function getRendererEndpoint(renderWith: string, tx: string) {\n\tif (checkValidAddress(renderWith)) {\n\t\treturn `${arweaveEndpoint}/${renderWith}/?tx=${tx}`;\n\t} else {\n\t\treturn `https://${renderWith}.arweave.net/?tx=${tx}`;\n\t}\n}\n", "import { TAGS } from './config';\n\ndeclare const InstallTrigger: any;\n\nexport function checkValidAddress(address: string | null) {\n\tif (!address) return false;\n\treturn /^[a-z0-9_-]{43}$/i.test(address);\n}\n\nexport function formatAddress(address: string | null, wrap: boolean) {\n\tif (!address) return '';\n\tif (!checkValidAddress(address)) return address;\n\tconst formattedAddress = address.substring(0, 5) + '...' + address.substring(36, address.length);\n\treturn wrap ? `(${formattedAddress})` : formattedAddress;\n}\n\nexport function getTagValue(list: { [key: string]: any }[], name: string): string | null {\n\tfor (let i = 0; i < list.length; i++) {\n\t\tif (list[i]) {\n\t\t\tif (list[i]!.name === name) {\n\t\t\t\treturn list[i]!.value as string;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\n\nexport function formatCount(count: string): string {\n\tif (count === '0' || !Number(count)) return '0';\n\n\tif (count.includes('.')) {\n\t\tlet parts = count.split('.');\n\t\tparts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n\t\t// Find the position of the last non-zero digit within the first 6 decimal places\n\t\tlet index = 0;\n\t\tfor (let i = 0; i < Math.min(parts[1].length, 6); i++) {\n\t\t\tif (parts[1][i] !== '0') {\n\t\t\t\tindex = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (index === 0) {\n\t\t\t// If all decimals are zeros, keep two decimal places\n\t\t\tparts[1] = '00';\n\t\t} else {\n\t\t\t// Otherwise, truncate to the last non-zero digit\n\t\t\tparts[1] = parts[1].substring(0, index);\n\n\t\t\t// If the decimal part is longer than 4 digits, truncate to 4 digits\n\t\t\tif (parts[1].length > 4 && parts[1].substring(0, 4) !== '0000') {\n\t\t\t\tparts[1] = parts[1].substring(0, 4);\n\t\t\t}\n\t\t}\n\n\t\treturn parts.join('.');\n\t} else {\n\t\treturn count.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\t}\n}\n\nexport function formatPercentage(percentage: any) {\n\tif (isNaN(percentage)) return '0%';\n\n\tlet multiplied = percentage * 100;\n\tlet decimalPart = multiplied.toString().split('.')[1];\n\n\tif (!decimalPart) {\n\t\treturn `${multiplied.toFixed(0)}%`;\n\t}\n\n\tif (decimalPart.length > 6 && decimalPart.substring(0, 6) === '000000') {\n\t\treturn `${multiplied.toFixed(0)}%`;\n\t}\n\n\tlet nonZeroIndex = decimalPart.length;\n\tfor (let i = 0; i < decimalPart.length; i++) {\n\t\tif (decimalPart[i] !== '0') {\n\t\t\tnonZeroIndex = i + 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn `${multiplied.toFixed(nonZeroIndex)}%`;\n}\n\nexport function formatDate(dateArg: string | number | null, dateType: 'iso' | 'epoch', fullTime?: boolean) {\n\tif (!dateArg) {\n\t\treturn null;\n\t}\n\n\tlet date: Date | null = null;\n\n\tswitch (dateType) {\n\t\tcase 'iso':\n\t\t\tdate = new Date(dateArg);\n\t\t\tbreak;\n\t\tcase 'epoch':\n\t\t\tdate = new Date(Number(dateArg));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tdate = new Date(dateArg);\n\t\t\tbreak;\n\t}\n\n\treturn fullTime\n\t\t? `${date.toLocaleString('default', { month: 'long' })} ${date.getDate()}, ${date.getUTCFullYear()} at ${\n\t\t\t\tdate.getHours() % 12 || 12\n\t\t\t}:${date.getMinutes().toString().padStart(2, '0')} ${date.getHours() >= 12 ? 'PM' : 'AM'}`\n\t\t: `${date.toLocaleString('default', { month: 'long' })} ${date.getDate()}, ${date.getUTCFullYear()}`;\n}\n\nexport function getRelativeDate(timestamp: number) {\n\tif (!timestamp) return '-';\n\tconst currentDate = new Date();\n\tconst inputDate = new Date(timestamp);\n\n\tconst timeDifference: number = currentDate.getTime() - inputDate.getTime();\n\tconst secondsDifference = Math.floor(timeDifference / 1000);\n\tconst minutesDifference = Math.floor(secondsDifference / 60);\n\tconst hoursDifference = Math.floor(minutesDifference / 60);\n\tconst daysDifference = Math.floor(hoursDifference / 24);\n\tconst monthsDifference = Math.floor(daysDifference / 30.44); // Average days in a month\n\tconst yearsDifference = Math.floor(monthsDifference / 12);\n\n\tif (yearsDifference > 0) {\n\t\treturn `${yearsDifference} year${yearsDifference > 1 ? 's' : ''} ago`;\n\t} else if (monthsDifference > 0) {\n\t\treturn `${monthsDifference} month${monthsDifference > 1 ? 's' : ''} ago`;\n\t} else if (daysDifference > 0) {\n\t\treturn `${daysDifference} day${daysDifference > 1 ? 's' : ''} ago`;\n\t} else if (hoursDifference > 0) {\n\t\treturn `${hoursDifference} hour${hoursDifference > 1 ? 's' : ''} ago`;\n\t} else if (minutesDifference > 0) {\n\t\treturn `${minutesDifference} minute${minutesDifference > 1 ? 's' : ''} ago`;\n\t} else {\n\t\treturn `${secondsDifference} second${secondsDifference !== 1 ? 's' : ''} ago`;\n\t}\n}\n\nexport function formatRequiredField(field: string) {\n\treturn `${field} *`;\n}\n\nexport function splitTagValue(tag: any) {\n\tlet parts = tag.split('-');\n\n\tlet lastPart = parts[parts.length - 1];\n\tif (!isNaN(lastPart)) {\n\t\tparts = parts.slice(0, -1).join(' ') + ': ' + lastPart;\n\t} else {\n\t\tparts = parts.join(' ');\n\t}\n\n\treturn parts;\n}\n\nexport function getTagDisplay(value: string) {\n\tlet result = value.replace(/([A-Z])/g, ' $1').trim();\n\tresult = result.charAt(0).toUpperCase() + result.slice(1);\n\treturn result;\n}\n\nexport function getDataURLContentType(dataURL: string) {\n\tconst result = dataURL.match(/^data:([a-zA-Z0-9]+\\/[a-zA-Z0-9-.+]+);base64,/);\n\treturn result ? result[1] : null;\n}\n\nexport function getBase64Data(dataURL: string) {\n\treturn dataURL.split(',')[1];\n}\n\nexport function getByteSize(input: string | Buffer): number {\n\tlet sizeInBytes: number;\n\tif (Buffer.isBuffer(input)) {\n\t\tsizeInBytes = input.length;\n\t} else if (typeof input === 'string') {\n\t\tsizeInBytes = Buffer.byteLength(input, 'utf-8');\n\t} else {\n\t\tthrow new Error('Input must be a string or a Buffer');\n\t}\n\n\treturn sizeInBytes;\n}\n\nexport function getTotalTokenBalance(tokenBalances: { profileBalance: number; walletBalance: number } | null) {\n\tif (!tokenBalances) return null;\n\tconst total = (tokenBalances.profileBalance || 0) + (tokenBalances.walletBalance || 0);\n\treturn total;\n}\n\nexport function isFirefox(): boolean {\n\treturn typeof InstallTrigger !== 'undefined';\n}\n\nexport function reverseDenomination(number: number) {\n\tlet count = 0;\n\n\twhile (number > 0 && number % 10 === 0) {\n\t\tcount++;\n\t\tnumber /= 10;\n\t}\n\n\treturn count;\n}\n\nexport function cleanProcessField(value: string) {\n\tlet updatedValue: string;\n\tupdatedValue = value.replace(/\\[|\\]/g, '');\n\treturn `[[${updatedValue}]]`;\n}\n\nexport function cleanTagValue(value: string) {\n\tlet updatedValue: string;\n\tupdatedValue = value.replace(/\\[|\\]/g, '');\n\treturn updatedValue;\n}\n\n/**\n * Extracts all values from a key-value store that match a given prefix\n * @param store The key-value store object to search\n * @param prefix The prefix to filter keys by (e.g., 'portal')\n * @returns Array of values whose keys match the prefix\n */\nexport function getStoreNamespace<T = any>(prefix: string, store: Record<string, T>): T[] {\n\tif (!store) return [];\n\n\tconst searchPrefix = `${prefix}:`;\n\treturn Object.keys(store)\n\t\t.filter((key) => key.startsWith(searchPrefix))\n\t\t.map((key) => store[key]) as any;\n}\n\nexport function buildStoreNamespace(prefix: string, value: string) {\n\treturn `${prefix}:${value.toLowerCase().replace(/\\s+/g, '-')}`;\n}\n\nexport const globalLog = (...args: any[]) => {\n\tconsole.log('[@permaweb/libs]', ...args);\n};\n\nfunction toProcessCase(str: string): string {\n\treturn str.replace(/^[a-z]/, (match) => match.toUpperCase());\n}\n\n/* Maps an object from camel case to pascal case */\nexport function mapToProcessCase(obj: any): any {\n\tif (Array.isArray(obj)) {\n\t\treturn obj.map(mapToProcessCase);\n\t} else if (obj && typeof obj === 'object') {\n\t\treturn Object.entries(obj).reduce((acc: any, [key, value]) => {\n\t\t\tconst toKey = toProcessCase(key);\n\t\t\tacc[toKey] = checkValidAddress(value as any) ? value : mapToProcessCase(value);\n\t\t\treturn acc;\n\t\t}, {});\n\t}\n\treturn obj;\n}\n\nfunction fromProcessCase(str: string) {\n\treturn str.charAt(0).toLowerCase() + str.slice(1);\n}\n\n/* Maps an object from pascal case to camel case */\nexport function mapFromProcessCase(obj: any): any {\n\tif (Array.isArray(obj)) {\n\t\treturn obj.map(mapFromProcessCase);\n\t} else if (obj && typeof obj === 'object') {\n\t\treturn Object.entries(obj).reduce((acc: any, [key, value]) => {\n\t\t\tconst fromKey = fromProcessCase(key);\n\t\t\tacc[fromKey] = checkValidAddress(value as any) ? value : mapFromProcessCase(value);\n\t\t\treturn acc;\n\t\t}, {});\n\t}\n\treturn obj;\n}\n\nexport function getBootTag(key: string, value: string) {\n\tconst capitalizedKey = key.charAt(0).toUpperCase() + key.slice(1);\n\treturn { name: `${TAGS.keys.bootloader}-${capitalizedKey}`, value };\n}", "export type DependencyType = {\n\tao: any;\n\tsigner?: any;\n\tarweave?: any;\n};\n\nexport type ProcessSpawnType = {\n\tmodule: string;\n\tscheduler: string;\n\tdata: any;\n\ttags: TagType[];\n\twallet: any;\n};\n\nexport type ProcessCreateType = {\n\tmodule?: string;\n\tscheduler?: string;\n\tdata?: any;\n\ttags?: TagType[];\n\tevalTags?: TagType[];\n\tevalTxId?: string;\n\tevalSrc?: string;\n};\n\nexport type MessageSendType = {\n\tprocessId: string;\n\taction: string;\n\ttags?: TagType[] | null;\n\tdata?: any;\n\tuseRawData?: boolean;\n};\n\nexport type MessageResultType = {\n\tmessageId: string;\n\tprocessId: string;\n\taction: string;\n};\n\nexport type MessageDryRunType = {\n\tprocessId: string;\n\taction: string;\n\ttags?: TagType[] | null;\n\tdata?: string | object;\n};\n\nexport type ZoneType = { store: any; assets: ZoneAssetType[] };\n\nexport type ZoneAssetType = { id: string; balance: string; dateCreated: number; lastUpdate: number };\n\nexport type ProfileArgsType = {\n\tuserName: string;\n\tdisplayName: string;\n\tdescription: string;\n\tthumbnail?: any;\n\tbanner?: any;\n};\n\nexport type ProfileType = {\n\tid: string;\n\twalletAddress: string;\n\tuserName: string;\n\tdisplayName: string;\n\tdescription: string;\n\tthumbnail?: any;\n\tbanner?: any;\n\tassets: { id: string; quantity: string }[];\n} & any;\n\nexport type AssetCreateArgsType = {\n\tname: string;\n\tdescription: string;\n\ttopics: string[];\n\tcreator: string;\n\tdata: any;\n\tcontentType: string;\n\tassetType: string;\n\tsupply?: number;\n\tdenomination?: number;\n\ttransferable?: boolean;\n\tmetadata?: object;\t\n\ttags?: TagType[];\n\tsrc?: string;\n};\n\nexport type AssetHeaderType = {\n\tid: string;\n\towner: string | null\n};\n\nexport type AssetDetailType = {\n\tid: string;\n\tname: string;\n\tticker: string;\n\tdenomination: string;\n\ttotalSupply: string;\n\ttransferable: string;\n\tcreator: string;\n\tbalances: object;\n\tmetadata: any;\n\tdateCreated: string;\n\tlastUpdate: string;\n}\n\nexport type CommentHeaderType = {\n\tid: string; \n\tcontent: string;\n\tparentId: string; \n\trootId: string\n};\n\nexport type CommentDetailType = {\n\tcontent: string;\n\tparentId: string;\n\trootId: string;\n}\n\nexport type CommentCreateArgType = { content: string; creator: string;  parentId: string; rootId?: string, tags?: TagType[] };\n\nexport type CollectionManifestType = {\n\ttype: string;\n\titems: string[];\n};\n\nexport type CollectionType = {\n\tid: string;\n\ttitle: string;\n\tdescription: string | null;\n\tcreator: string;\n\tdateCreated: string;\n\tbanner: string | null;\n\tthumbnail: string | null;\n};\n\nexport type CollectionDetailType = CollectionType & {\n\tassetIds: string[];\n};\n\nexport type UDLicenseType = {\n\taccess: UDLicenseValueType | null;\n\tderivations: UDLicenseValueType | null;\n\tcommercialUse: UDLicenseValueType | null;\n\tdataModelTraining: UDLicenseValueType | null;\n\tpaymentMode: string | null;\n\tpaymentAddress: string | null;\n\tcurrency: string | null;\n};\n\nexport type UDLicenseValueType = {\n\tvalue: string | null;\n\ticon?: string;\n\tendText?: string;\n};\n\nexport type BaseGQLArgsType = {\n\tids?: string[] | null;\n\ttags?: TagFilterType[] | null;\n\towners?: string[] | null;\n\trecipients?: string[] | null;\n\tcursor?: string | null;\n\tpaginator?: number;\n\tminBlock?: number;\n\tmaxBlock?: number;\n};\n\nexport type GQLArgsType = { gateway: string } & BaseGQLArgsType;\n\nexport type QueryBodyGQLArgsType = BaseGQLArgsType & { gateway?: string; queryKey?: string };\n\nexport type BatchGQLArgsType = {\n\tgateway: string;\n\tentries: { [queryKey: string]: BaseGQLArgsType };\n};\n\nexport type GQLNodeResponseType = {\n\tcursor: string | null;\n\tnode: {\n\t\tid: string;\n\t\ttags: TagType[];\n\t\tdata: {\n\t\t\tsize: string;\n\t\t\ttype: string;\n\t\t};\n\t\towner: {\n\t\t\taddress: string;\n\t\t};\n\t\tblock: {\n\t\t\theight: number;\n\t\t\ttimestamp: number;\n\t\t};\n\t};\n};\n\nexport type GQLResponseType = {\n\tcount: number;\n\tnextCursor: string | null;\n\tpreviousCursor: string | null;\n};\n\nexport type DefaultGQLResponseType = {\n\tdata: GQLNodeResponseType[];\n} & GQLResponseType;\n\nexport type BatchAGQLResponseType = { [queryKey: string]: DefaultGQLResponseType };\n\nexport type TagType = { name: string; value: string };\n\nexport type TagFilterType = { name: string; values: string[]; match?: string };\n", "export * from './ao';\nexport * from './arweave';\nexport * from './gql';\n", "import { AO, GATEWAYS } from 'helpers/config';\nimport { getTxEndpoint } from 'helpers/endpoints';\nimport {\n\tDependencyType,\n\tMessageDryRunType,\n\tMessageResultType,\n\tMessageSendType,\n\tProcessCreateType,\n\tProcessSpawnType,\n\tTagType,\n} from 'helpers/types';\nimport { getTagValue, globalLog } from 'helpers/utils';\n\nimport { getGQLData } from './gql';\n\nconst GATEWAY = GATEWAYS.goldsky;\n\nconst GATEWAY_RETRY_COUNT = 100;\n\nexport async function aoSpawn(deps: DependencyType, args: ProcessSpawnType): Promise<string> {\n\tconst tags = [{ name: 'Authority', value: AO.mu }];\n\tif (args.tags && args.tags.length > 0) args.tags.forEach((tag: TagType) => tags.push(tag));\n\n\ttry {\n\t\tconst processId = await deps.ao.spawn({\n\t\t\tmodule: args.module,\n\t\t\tscheduler: args.scheduler,\n\t\t\tsigner: deps.signer,\n\t\t\ttags: tags,\n\t\t\tdata: args.data,\n\t\t});\n\n\t\tglobalLog(`Process ID: ${processId}`);\n\n\t\treturn processId;\n\t} catch (e: any) {\n\t\tthrow new Error(e.message ?? 'Error spawning process');\n\t}\n}\n\nexport function aoSendWith(deps: DependencyType) {\n\treturn async (args: MessageSendType) => {\n\t\treturn await aoSend(deps, args);\n\t}\n}\n\nexport async function aoSend(deps: DependencyType, args: MessageSendType): Promise<string> {\n\ttry {\n\t\tconst tags: TagType[] = [{ name: 'Action', value: args.action }];\n\t\tif (args.tags) tags.push(...args.tags);\n\n\t\tconst data = args.useRawData ? args.data : JSON.stringify(args.data);\n\n\t\tconst txId = await deps.ao.message({\n\t\t\tprocess: args.processId,\n\t\t\tsigner: deps.signer,\n\t\t\ttags: tags,\n\t\t\tdata: data,\n\t\t});\n\n\t\treturn txId;\n\t} catch (e: any) {\n\t\tthrow new Error(e);\n\t}\n}\n\nexport function aoDryRunWith(deps: DependencyType) {\n\treturn async (args: MessageSendType) => {\n\t\treturn await aoDryRun(deps, args);\n\t}\n}\n\nexport async function aoDryRun(deps: DependencyType, args: MessageDryRunType): Promise<any> {\n\ttry {\n\t\tconst tags = [{ name: 'Action', value: args.action }];\n\t\tif (args.tags) tags.push(...args.tags);\n\t\tlet dataPayload;\n\t\tif (typeof args.data === 'object') {\n\t\t\tdataPayload = JSON.stringify(args.data || {});\n\t\t} else if (typeof args.data === 'string') {\n\t\t\ttry {\n\t\t\t\tJSON.parse(args.data);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t\tthrow new Error('Invalid JSON data');\n\t\t\t}\n\t\t\tdataPayload = args.data;\n\t\t}\n\n\t\tconst response = await deps.ao.dryrun({\n\t\t\tprocess: args.processId,\n\t\t\ttags: tags,\n\t\t\tdata: dataPayload,\n\t\t});\n\n\t\tif (response.Messages && response.Messages.length) {\n\t\t\tif (response.Messages[0].Data) {\n\t\t\t\treturn JSON.parse(response.Messages[0].Data);\n\t\t\t} else {\n\t\t\t\tif (response.Messages[0].Tags) {\n\t\t\t\t\treturn response.Messages[0].Tags.reduce((acc: any, item: any) => {\n\t\t\t\t\t\tacc[item.name] = item.value;\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}, {});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (e: any) {\n\t\tthrow new Error(e.message ?? 'Error dryrunning process');\n\t}\n}\n\nexport async function aoMessageResult(deps: DependencyType, args: MessageResultType): Promise<any> {\n\ttry {\n\t\tconst { Messages } = await deps.ao.result({ message: args.messageId, process: args.processId });\n\n\t\tif (Messages && Messages.length) {\n\t\t\tconst response: { [key: string]: any } = {};\n\n\t\t\tMessages.forEach((message: any) => {\n\t\t\t\tconst action = getTagValue(message.Tags, 'Action') || args.action;\n\n\t\t\t\tlet responseData = null;\n\t\t\t\tconst messageData = message.Data;\n\n\t\t\t\tif (messageData) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresponseData = JSON.parse(messageData);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\tresponseData = messageData;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst responseStatus = getTagValue(message.Tags, 'Status');\n\t\t\t\tconst responseMessage = getTagValue(message.Tags, 'Message');\n\n\t\t\t\tresponse[action] = {\n\t\t\t\t\tid: args.messageId,\n\t\t\t\t\tstatus: responseStatus,\n\t\t\t\t\tmessage: responseMessage,\n\t\t\t\t\tdata: responseData,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\treturn response;\n\t\t} else return null;\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n}\n\nexport async function aoMessageResults(\n\tdeps: DependencyType,\n\targs: {\n\t\tprocessId: string;\n\t\taction: string;\n\t\ttags: TagType[] | null;\n\t\tdata: any;\n\t\tresponses?: string[];\n\t\thandler?: string;\n\t},\n): Promise<any> {\n\ttry {\n\t\tconst tags = [{ name: 'Action', value: args.action }];\n\t\tif (args.tags) tags.push(...args.tags);\n\n\t\tawait deps.ao.message({\n\t\t\tprocess: args.processId,\n\t\t\tsigner: deps.signer,\n\t\t\ttags: tags,\n\t\t\tdata: JSON.stringify(args.data),\n\t\t});\n\n\t\tawait new Promise((resolve) => setTimeout(resolve, 1000));\n\n\t\tconst messageResults = await deps.ao.results({\n\t\t\tprocess: args.processId,\n\t\t\tsort: 'DESC',\n\t\t\tlimit: 100,\n\t\t});\n\n\t\tif (messageResults && messageResults.edges && messageResults.edges.length) {\n\t\t\tconst response: any = {};\n\n\t\t\tfor (const result of messageResults.edges) {\n\t\t\t\tif (result.node && result.node.Messages && result.node.Messages.length) {\n\t\t\t\t\tconst resultSet: any[] = [args.action];\n\t\t\t\t\tif (args.responses) resultSet.push(...args.responses);\n\n\t\t\t\t\tfor (const message of result.node.Messages) {\n\t\t\t\t\t\tconst action = getTagValue(message.Tags, 'Action');\n\n\t\t\t\t\t\tif (action) {\n\t\t\t\t\t\t\tlet responseData = null;\n\t\t\t\t\t\t\tconst messageData = message.Data;\n\n\t\t\t\t\t\t\tif (messageData) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tresponseData = JSON.parse(messageData);\n\t\t\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\t\t\tresponseData = messageData;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst responseStatus = getTagValue(message.Tags, 'Status');\n\t\t\t\t\t\t\tconst responseMessage = getTagValue(message.Tags, 'Message');\n\n\t\t\t\t\t\t\tif (action === 'Action-Response') {\n\t\t\t\t\t\t\t\tconst responseHandler = getTagValue(message.Tags, 'Handler');\n\t\t\t\t\t\t\t\tif (args.handler && args.handler === responseHandler) {\n\t\t\t\t\t\t\t\t\tresponse[action] = {\n\t\t\t\t\t\t\t\t\t\tstatus: responseStatus,\n\t\t\t\t\t\t\t\t\t\tmessage: responseMessage,\n\t\t\t\t\t\t\t\t\t\tdata: responseData,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (resultSet.indexOf(action) !== -1) {\n\t\t\t\t\t\t\t\t\tresponse[action] = {\n\t\t\t\t\t\t\t\t\t\tstatus: responseStatus,\n\t\t\t\t\t\t\t\t\t\tmessage: responseMessage,\n\t\t\t\t\t\t\t\t\t\tdata: responseData,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (Object.keys(response).length === resultSet.length) break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn response;\n\t\t}\n\n\t\treturn null;\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n}\n\nexport async function handleProcessEval(\n\tdeps: DependencyType,\n\targs: {\n\t\tprocessId: string;\n\t\tevalTxId: string | null;\n\t\tevalSrc: string | null;\n\t\tevalTags?: TagType[];\n\t},\n): Promise<string | null> {\n\tlet src: string | null = null;\n\n\tif (args.evalSrc) src = args.evalSrc;\n\telse if (args.evalTxId) src = await fetchProcessSrc(args.evalTxId);\n\n\tif (src) {\n\t\ttry {\n\t\t\tconst evalMessage = await aoSend(deps, {\n\t\t\t\tprocessId: args.processId,\n\t\t\t\taction: 'Eval',\n\t\t\t\tdata: src,\n\t\t\t\ttags: args.evalTags || null,\n\t\t\t\tuseRawData: true,\n\t\t\t});\n\n\t\t\tglobalLog(`Eval: ${evalMessage}`);\n\n\t\t\tconst evalResult = await aoMessageResult(deps, {\n\t\t\t\tprocessId: args.processId,\n\t\t\t\tmessageId: evalMessage,\n\t\t\t\taction: 'Eval',\n\t\t\t});\n\n\t\t\treturn evalResult;\n\t\t} catch (e: any) {\n\t\t\tthrow new Error(e.message ?? 'Error sending process eval');\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function aoCreateProcessWith(deps: DependencyType) {\n\treturn async (args: ProcessCreateType, statusCB?: (status: any) => void) => {\n\t\ttry {\n\t\t\tconst spawnArgs: any = {\n\t\t\t\tmodule: args.module || AO.module,\n\t\t\t\tscheduler: args.scheduler || AO.scheduler,\n\t\t\t};\n\n\t\t\tif (args.data) spawnArgs.data = args.data;\n\t\t\tif (args.tags) spawnArgs.tags = args.tags;\n\n\t\t\tstatusCB && statusCB(`Spawning process...`);\n\t\t\tconst processId = await aoSpawn(deps, spawnArgs);\n\n\t\t\tstatusCB && statusCB(`Retrieving process...`);\n\t\t\tawait waitForProcess(processId, statusCB);\n\t\t\t\n\t\t\tif (args.evalTxId || args.evalSrc) {\n\t\t\t\tstatusCB && statusCB(`Process retrieved!`);\n\t\t\t\tstatusCB && statusCB('Sending eval...');\n\n\t\t\t\ttry {\n\t\t\t\t\tconst evalResult = await handleProcessEval(deps, {\n\t\t\t\t\t\tprocessId: processId,\n\t\t\t\t\t\tevalTxId: args.evalTxId || null,\n\t\t\t\t\t\tevalSrc: args.evalSrc || null,\n\t\t\t\t\t\tevalTags: args.evalTags,\n\t\t\t\t\t});\n\n\t\t\t\t\tif (evalResult && statusCB) statusCB('Eval complete');\n\t\t\t\t} catch (e: any) {\n\t\t\t\t\tthrow new Error(e.message ?? 'Error creating process');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn processId;\n\t\t} catch (e: any) {\n\t\t\tthrow new Error(e.message ?? 'Error creating process');\n\t\t}\n\t};\n}\n\nexport async function aoCreateProcess(\n\tdeps: DependencyType,\n\targs: ProcessCreateType,\n\tstatusCB?: (status: any) => void,\n): Promise<string> {\n\ttry {\n\t\tconst spawnArgs: any = {\n\t\t\tmodule: args.module || AO.module,\n\t\t\tscheduler: args.scheduler || AO.scheduler,\n\t\t};\n\n\t\tif (args.data) spawnArgs.data = args.data;\n\t\tif (args.tags) spawnArgs.tags = args.tags;\n\n\t\tstatusCB && statusCB(`Spawning process...`);\n\t\tconst processId = await aoSpawn(deps, spawnArgs);\n\n\t\tstatusCB && statusCB(`Retrieving process...`);\n\t\tawait waitForProcess(processId, statusCB);\n\n\t\tif (args.evalTxId || args.evalSrc) {\n\t\t\tstatusCB && statusCB(`Process retrieved!`);\n\t\t\tstatusCB && statusCB('Sending eval...');\n\n\t\t\ttry {\n\t\t\t\tconst evalResult = await handleProcessEval(deps, {\n\t\t\t\t\tprocessId: processId,\n\t\t\t\t\tevalTxId: args.evalTxId || null,\n\t\t\t\t\tevalSrc: args.evalSrc || null,\n\t\t\t\t\tevalTags: args.evalTags,\n\t\t\t\t});\n\n\t\t\t\tif (evalResult && statusCB) statusCB('Eval complete');\n\t\t\t} catch (e: any) {\n\t\t\t\tthrow new Error(e.message ?? 'Error creating process');\n\t\t\t}\n\t\t}\n\n\t\treturn processId;\n\t} catch (e: any) {\n\t\tthrow new Error(e.message ?? 'Error creating process');\n\t}\n}\n\nexport async function waitForProcess(processId: string, _setStatus?: (status: any) => void) {\n\tlet retries = 0;\n\n\twhile (retries < GATEWAY_RETRY_COUNT) {\n\t\tawait new Promise((r) => setTimeout(r, 2000));\n\n\t\tconst gqlResponse = await getGQLData({\n\t\t\tgateway: GATEWAY,\n\t\t\tids: [processId],\n\t\t});\n\n\t\tif (gqlResponse?.data?.length) {\n\t\t\tconst foundProcess = gqlResponse.data[0].node.id;\n\t\t\tglobalLog(`Process found: ${foundProcess} (Try ${retries + 1})`);\n\t\t\treturn foundProcess;\n\t\t} else {\n\t\t\tglobalLog(`Process not found: ${processId} (Try ${retries + 1})`);\n\t\t\tretries++;\n\t\t}\n\t}\n\n\tthrow new Error(`Process not found, please try again`);\n}\n\nexport async function fetchProcessSrc(txId: string): Promise<string> {\n\ttry {\n\t\tconst srcFetch = await fetch(getTxEndpoint(txId));\n\t\treturn await srcFetch.text();\n\t} catch (e: any) {\n\t\tthrow new Error(e);\n\t}\n}\n", "import { GATEWAYS } from 'helpers/config';\nimport {\n\tBatchAGQLResponseType,\n\tBatchGQLArgsType,\n\tDefaultGQLResponseType,\n\tGQLArgsType,\n\tGQLNodeResponseType,\n\tQueryBodyGQLArgsType,\n} from 'helpers/types';\n\nconst CURSORS = {\n\tp1: 'P1',\n\tend: 'END',\n};\n\nconst PAGINATORS = {\n\tdefault: 100,\n};\n\nexport async function getGQLData(args: GQLArgsType): Promise<DefaultGQLResponseType> {\n\tconst paginator = args.paginator ? args.paginator : PAGINATORS.default;\n\tlet data: GQLNodeResponseType[] = [];\n\tlet count: number = 0;\n\tlet nextCursor: string | null = null;\n\n\tif (args.ids && !args.ids.length) {\n\t\treturn { data: data, count: count, nextCursor: nextCursor, previousCursor: null };\n\t}\n\n\ttry {\n\t\tlet queryBody: string = getQueryBody(args);\n\t\tconst response = await getResponse({ gateway: args.gateway ?? GATEWAYS.goldsky, query: getQuery(queryBody) });\n\n\t\tif (response?.data?.transactions?.edges?.length) {\n\t\t\tdata = [...response.data.transactions.edges];\n\t\t\tcount = response.data.transactions.count ?? 0;\n\n\t\t\tconst lastResults: boolean = data.length < paginator || !response.data.transactions.pageInfo.hasNextPage;\n\n\t\t\tif (lastResults) nextCursor = CURSORS.end;\n\t\t\telse nextCursor = data[data.length - 1].cursor;\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\tcount: count,\n\t\t\t\tnextCursor: nextCursor,\n\t\t\t\tpreviousCursor: null,\n\t\t\t};\n\t\t} else {\n\t\t\treturn { data: data, count: count, nextCursor: nextCursor, previousCursor: null };\n\t\t}\n\t} catch (e: any) {\n\t\tconsole.error(e);\n\t\treturn { data: data, count: count, nextCursor: nextCursor, previousCursor: null };\n\t}\n}\n\nexport async function getAggregatedGQLData(args: GQLArgsType, callback?: (message: string) => void) { // , processElementCallback: (element: GQLNodeResponseType) => void\n\tlet index = 1;\n\tlet fetchResult = await getGQLData(args);\n\n\tif (fetchResult && fetchResult.data.length) {\n\t\tlet aggregatedData = fetchResult.data;\n\t\tcallback && callback(`Count: ${fetchResult.count}`);\n\t\tcallback && callback(`Pages to fetch: ${Math.ceil(fetchResult.count / (args.paginator ?? PAGINATORS.default))}`);\n\t\tcallback && callback(`Page ${index} fetched`);\n\n\t\twhile (fetchResult.nextCursor && fetchResult.nextCursor !== CURSORS.end) {\n\t\t\tindex += 1;\n\t\t\tcallback && callback(`Fetching page ${index}...`);\n\n\t\t\tfetchResult = await getGQLData({\n\t\t\t\t...args,\n\t\t\t\tcursor: fetchResult.nextCursor,\n\t\t\t});\n\n\t\t\tif (fetchResult && fetchResult.data.length) {\n\t\t\t\taggregatedData = aggregatedData.concat(fetchResult.data);\n\t\t\t}\n\t\t}\n\n\t\tcallback && callback(`All pages fetched!`);\n\t\treturn aggregatedData;\n\t}\n\telse {\n\t\tcallback && callback('No data found');\n\t}\n\n\treturn null;\n}\n\nexport async function getBatchGQLData(args: BatchGQLArgsType): Promise<BatchAGQLResponseType> {\n\tlet responseObject: BatchAGQLResponseType = {};\n\tlet queryBody: string = '';\n\n\tfor (const [queryKey, baseArgs] of Object.entries(args.entries)) {\n\t\tresponseObject[queryKey] = { data: [], count: 0, nextCursor: null, previousCursor: null };\n\t\tqueryBody += getQueryBody({ ...baseArgs, gateway: args.gateway ?? GATEWAYS.goldsky, queryKey: queryKey });\n\t}\n\n\ttry {\n\t\tconst response = await getResponse({ gateway: args.gateway ?? GATEWAYS.goldsky, query: getQuery(queryBody) });\n\n\t\tif (response && response.data) {\n\t\t\tfor (const queryKey of Object.keys(response.data)) {\n\t\t\t\tconst paginator = args.entries[queryKey].paginator ? args.entries[queryKey].paginator : PAGINATORS.default;\n\n\t\t\t\tlet data: GQLNodeResponseType[] = [];\n\t\t\t\tlet count: number = 0;\n\t\t\t\tlet nextCursor: string | null = null;\n\n\t\t\t\tif (response.data[queryKey].edges.length) {\n\t\t\t\t\tdata = [...response.data[queryKey].edges];\n\t\t\t\t\tcount = response.data[queryKey].count ?? 0;\n\n\t\t\t\t\tconst lastResults: boolean = data.length < paginator || !response.data[queryKey].pageInfo.hasNextPage;\n\n\t\t\t\t\tif (lastResults) nextCursor = CURSORS.end;\n\t\t\t\t\telse nextCursor = data[data.length - 1].cursor;\n\n\t\t\t\t\tresponseObject[queryKey] = {\n\t\t\t\t\t\tdata: [...response.data[queryKey].edges],\n\t\t\t\t\t\tcount: count,\n\t\t\t\t\t\tnextCursor: nextCursor,\n\t\t\t\t\t\tpreviousCursor: null,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn responseObject;\n\t} catch (e: any) {\n\t\tconsole.error(e);\n\t\treturn responseObject;\n\t}\n}\n\nfunction getQuery(body: string): string {\n\tconst query = { query: `query { ${body} }` };\n\treturn JSON.stringify(query);\n}\n\nfunction getQueryBody(args: QueryBodyGQLArgsType): string {\n\tconst paginator = args.paginator ? args.paginator : PAGINATORS.default;\n\tconst ids = args.ids ? JSON.stringify(args.ids) : null;\n\tlet blockFilter: { min?: number; max?: number } | null = null;\n\tif (args.minBlock !== undefined && args.minBlock !== null) {\n\t\tblockFilter = {};\n\t\tblockFilter.min = args.minBlock;\n\t}\n\tconst blockFilterStr = blockFilter ? JSON.stringify(blockFilter).replace(/\"([^\"]+)\":/g, '$1:') : null;\n\tconst tags = args.tags\n\t\t? JSON.stringify(args.tags)\n\t\t\t\t.replace(/\"(name)\":/g, '$1:')\n\t\t\t\t.replace(/\"(values)\":/g, '$1:')\n\t\t\t\t.replace(/\"match\"/g, 'match')\n\t\t\t\t.replace(/\"FUZZY_OR\"/g, 'FUZZY_OR')\n\t\t: null;\n\tconst owners = args.owners ? JSON.stringify(args.owners) : null;\n\tconst recipients = args.recipients ? JSON.stringify(args.recipients) : null;\n\tconst cursor = args.cursor && args.cursor !== CURSORS.end ? `\"${args.cursor}\"` : null;\n\n\tlet fetchCount: string = `first: ${paginator}`;\n\tlet txCount: string = '';\n\tlet nodeFields: string = `data { size type } owner { address } block { height timestamp }`;\n\tlet order: string = '';\n\tlet recipientsfield: string = ''\n\n\tconst gateway = args.gateway ?? GATEWAYS.goldsky;\n\tswitch (gateway) {\n\t\tcase GATEWAYS.arweave:\n\t\t\tbreak;\n\t\tcase GATEWAYS.goldsky:\n\t\t\tif (!cursor) txCount = `count`;\n\t\t\tif (recipients) recipientsfield = `recipients: ${recipients}`;\n\t\t\tbreak;\n\t}\n\n\tlet body = `\n\t\ttransactions(\n\t\t\t\tids: ${ids},\n\t\t\t\ttags: ${tags},\n\t\t\t\t${fetchCount}\n\t\t\t\towners: ${owners},\n\t\t\t\t${recipientsfield},\n\t\t\t\tblock: ${blockFilterStr},\n\t\t\t\tafter: ${cursor},\n\t\t\t\t${order}\n\t\t\t\t\n\t\t\t){\n\t\t\t${txCount}\n\t\t\t\tpageInfo {\n\t\t\t\t\thasNextPage\n\t\t\t\t}\n\t\t\t\tedges {\n\t\t\t\t\tcursor\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttags {\n\t\t\t\t\t\t\tname \n\t\t\t\t\t\t\tvalue \n\t\t\t\t\t\t}\n\t\t\t\t\t\t${nodeFields}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}`;\n\n\tif (args.queryKey) body = `${args.queryKey}: ${body}`;\n\n\treturn body;\n}\n\nasync function getResponse(args: { gateway: string; query: string }): Promise<any> {\n\ttry {\n\t\tconst response = await fetch(`https://${args.gateway}/graphql`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: args.query,\n\t\t});\n\t\treturn await response.json();\n\t} catch (e: any) {\n\t\tthrow e;\n\t}\n}\n", "/* Used for build - Do not remove ! */\nimport Arweave from 'arweave';\n\nimport { TAGS, UPLOAD } from 'helpers/config';\nimport { DependencyType, TagType } from 'helpers/types';\nimport { checkValidAddress, getBase64Data, getByteSize, getDataURLContentType, globalLog } from 'helpers/utils';\n\nexport function resolveTransactionWith(deps: DependencyType) {\n\treturn async (data: any) => {\n\t\tif (checkValidAddress(data)) return data;\n\t\tif (!deps.arweave) throw new Error(`Must initialize with Arweave in order to create transactions`);\n\t\ttry {\n\t\t\treturn await createTransaction(deps, { data: data });\n\t\t} catch (e: any) {\n\t\t\tthrow new Error(e.message ?? 'Error resolving transaction');\n\t\t}\n\t};\n}\n\nexport async function resolveTransaction(deps: DependencyType, data: any) {\n\tif (checkValidAddress(data)) return data;\n\tif (!deps.arweave) throw new Error(`Must initialize with Arweave in order to create transactions`);\n\ttry {\n\t\treturn await createTransaction(deps, { data: data });\n\t} catch (e: any) {\n\t\tthrow new Error(e.message ?? 'Error resolving transaction');\n\t}\n}\n\nexport async function createTransaction(\n\tdeps: DependencyType,\n\targs: {\n\t\tdata: any;\n\t\ttags?: TagType[];\n\t\tuploadMethod?: 'default' | 'turbo';\n\t},\n): Promise<string> {\n\tlet content: any = null;\n\tlet contentType: string | null = null;\n\n\ttry {\n\t\tif (typeof args.data === 'string' && args.data.startsWith('data:')) {\n\t\t\tcontent = Buffer.from(getBase64Data(args.data), 'base64');\n\t\t\tcontentType = getDataURLContentType(args.data);\n\t\t}\n\t} catch (e: any) {\n\t\tthrow new Error(e);\n\t}\n\n\tif (content && contentType) {\n\t\tconst contentSize: number = getByteSize(content);\n\n\t\tglobalLog(`Content upload size: ${contentSize}`);\n\n\t\tif (contentSize < Number(UPLOAD.dispatchUploadSize)) {\n\t\t\tconst tx = await deps.arweave.createTransaction({ data: content }, 'use_wallet');\n\t\t\ttx.addTag(TAGS.keys.contentType, contentType);\n\t\t\tif (args.tags && args.tags.length > 0) args.tags.forEach((tag: TagType) => tx.addTag(tag.name, tag.value));\n\n\t\t\tconst response = await global.window.arweaveWallet.dispatch(tx);\n\t\t\treturn response.id;\n\t\t} else {\n\t\t\tthrow new Error('Data exceeds max upload limit'); // TODO\n\t\t}\n\t} else {\n\t\tthrow new Error('Error preparing transaction data');\n\t}\n}\n", "export * from './assets';\nexport * from './collections';\nexport * from './comments';\nexport * from './profiles';\nexport * from './zones';\n", "import { aoCreateProcess, aoDryRun } from 'common/ao';\nimport { getGQLData } from 'common/gql';\n\nimport { AO, CONTENT_TYPES, GATEWAYS, TAGS } from 'helpers/config';\nimport {\n\tAssetCreateArgsType,\n\tAssetDetailType,\n\tAssetHeaderType,\n\tDependencyType,\n\tGQLNodeResponseType,\n\tTagType\n} from 'helpers/types';\nimport { getBootTag, mapFromProcessCase, mapToProcessCase } from 'helpers/utils';\n\nexport function createAtomicAssetWith(deps: DependencyType) {\n\treturn async (args: AssetCreateArgsType, callback?: (status: any) => void) => {\n\t\tconst validationError = getValidationErrorMessage(args);\n\t\tif (validationError) throw new Error(validationError);\n\n\t\tconst data = CONTENT_TYPES[args.contentType]?.serialize(args.data) ?? args.data;\n\t\tconst tags = buildAssetCreateTags(args);\n\n\t\ttry {\n\t\t\tconst assetId = await aoCreateProcess(\n\t\t\t\tdeps,\n\t\t\t\t{ tags: tags, data: data },\n\t\t\t\tcallback ? (status) => callback(status) : undefined,\n\t\t\t);\n\n\t\t\treturn assetId;\n\t\t} catch (e: any) {\n\t\t\tthrow new Error(e.message ?? 'Error creating asset');\n\t\t}\n\t};\n}\n\nexport async function getAtomicAsset(\n\tdeps: DependencyType,\n\tid: string,\n\targs?: { useGateway?: boolean }\n): Promise<AssetDetailType | null> {\n\ttry {\n\t\tconst processInfo = mapFromProcessCase(await aoDryRun(deps, {\n\t\t\tprocessId: id,\n\t\t\taction: 'Info',\n\t\t}));\n\n\t\tif (args?.useGateway) {\n\t\t\tconst gqlResponse = await getGQLData({\n\t\t\t\tgateway: GATEWAYS.goldsky,\n\t\t\t\tids: [id],\n\t\t\t\ttags: null,\n\t\t\t\towners: null,\n\t\t\t\tcursor: null,\n\t\t\t});\n\n\t\t\tconst gatewayAsset = gqlResponse?.data?.[0]\n\t\t\t\t? buildAsset(gqlResponse.data[0])\n\t\t\t\t: {};\n\t\t\t\n\t\t\treturn {\n\t\t\t\t...gatewayAsset,\n\t\t\t\t...processInfo,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tid: id,\n\t\t\t...processInfo\n\t\t}\n\t} catch (e: any) {\n\t\tthrow new Error(e.message || 'Error fetching atomic asset');\n\t}\n}\n\nexport function getAtomicAssetWith(deps: DependencyType) {\n\treturn async (id: string, args?: { useGateway?: boolean }): Promise<AssetDetailType | null> => {\n\t\treturn await getAtomicAsset(deps, id, args);\n\t};\n}\n\nexport async function getAtomicAssets(ids: string[]): Promise<AssetHeaderType[] | null> {\n\ttry {\n\t\tconst gqlResponse = await getGQLData({\n\t\t\tgateway: GATEWAYS.arweave,\n\t\t\tids: ids ?? null,\n\t\t\ttags: null,\n\t\t\towners: null,\n\t\t\tcursor: null,\n\t\t});\n\n\t\tif (gqlResponse && gqlResponse.data.length) {\n\t\t\treturn gqlResponse.data.map((element: GQLNodeResponseType) => buildAsset(element));\n\t\t}\n\n\t\treturn null;\n\t} catch (e: any) {\n\t\tthrow new Error(e);\n\t}\n}\n\nexport function buildAsset(element: GQLNodeResponseType): any {\n\tconst asset: any = { id: element.node.id, owner: element.node.owner.address };\n\n\tfor (const tag of element.node.tags) {\n\t\tconst originalKey = tag.name;\n\n\t\tconst keyWithoutPrefix = originalKey.startsWith(`${TAGS.keys.bootloader}-`)\n\t\t\t? originalKey.slice(`${TAGS.keys.bootloader}-`.length)\n\t\t\t: originalKey;\n\n\t\tconst formattedKey = keyWithoutPrefix\n\t\t\t.split('-')\n\t\t\t.map((part, index) =>\n\t\t\t\tindex === 0\n\t\t\t\t\t? part.toLowerCase()\n\t\t\t\t\t: part.charAt(0).toUpperCase() + part.slice(1).toLowerCase()\n\t\t\t)\n\t\t\t.join('');\n\n\t\tlet decodedValue;\n\t\ttry {\n\t\t\tdecodedValue = JSON.parse(tag.value);\n\t\t} catch {\n\t\t\tdecodedValue = tag.value.toString();\n\t\t}\n\n\t\tasset[formattedKey] = decodedValue;\n\t}\n\n\treturn asset;\n}\n\nfunction buildAssetCreateTags(args: AssetCreateArgsType): { name: string; value: string }[] {\n\tconst tags = [\n\t\t{ name: TAGS.keys.bootloaderInit, value: args.src ?? AO.src.asset },\n\t\t{ name: TAGS.keys.creator, value: args.creator },\n\t\t{ name: TAGS.keys.assetType, value: args.assetType },\n\t\t{ name: TAGS.keys.contentType, value: args.contentType },\n\t\t{ name: TAGS.keys.implements, value: 'ANS-110' },\n\t\t{ name: TAGS.keys.dateCreated, value: new Date().getTime().toString() },\n\t\tgetBootTag('Name', args.name),\n\t\tgetBootTag('Description', args.description),\n\t\tgetBootTag('Topics', JSON.stringify(args.topics)),\n\t\tgetBootTag('Ticker', 'ATOMIC'),\n\t\tgetBootTag('Denomination', args.denomination?.toString() ?? '1'),\n\t\tgetBootTag('TotalSupply', args.supply?.toString() ?? '1'),\n\t\tgetBootTag('Transferable', args.transferable?.toString() ?? 'true'),\n\t\tgetBootTag('Creator', args.creator),\n\t];\n\n\tif (args.metadata) {\n\t\tfor (const entry in args.metadata) {\n\t\t\ttags.push(getBootTag(mapToProcessCase(entry), (args.metadata as any)[entry].toString()));\n\t\t}\n\t}\n\n\tif (args.tags) args.tags.forEach((tag: TagType) => tags.push(tag));\n\n\treturn tags;\n}\n\nfunction getValidationErrorMessage(args: AssetCreateArgsType): string | null {\n\tif (typeof args !== 'object' || args === null) return 'The provided arguments are invalid or empty.';\n\n\tconst requiredFields = ['name', 'description', 'topics', 'creator', 'data', 'contentType', 'assetType'];\n\tfor (const field of requiredFields) {\n\t\tif (!(field in args)) return `Missing field '${field}'`;\n\t}\n\n\tif (typeof args.name !== 'string' || args.name.trim() === '') return 'Name is required';\n\tif (typeof args.description !== 'string') return 'The description must be a valid string';\n\tif (!Array.isArray(args.topics) || args.topics.length === 0) return 'Topics are required';\n\tif (typeof args.creator !== 'string' || args.creator.trim() === '') return 'Creator is required';\n\tif (args.data === undefined || args.data === null) return 'Data field is required';\n\tif (typeof args.contentType !== 'string' || args.contentType.trim() === '')\n\t\treturn 'Content type must be a non-empty string';\n\tif (typeof args.assetType !== 'string' || args.assetType.trim() === '') return 'Type must be a non-empty string';\n\n\tif ('supply' in args && (typeof args.supply !== 'number' || args.supply <= 0))\n\t\treturn 'Supply must be a positive number';\n\tif ('denomination' in args && (typeof args.denomination !== 'number' || args.denomination <= 0))\n\t\treturn 'Denomination must be a positive number';\n\tif ('transferable' in args && typeof args.transferable !== 'boolean') return 'Transferable must be a boolean value';\n\tif ('metadata' in args && typeof args.metadata !== 'object') return 'Metadata must be an object';\n\tif ('tags' in args && (!Array.isArray(args.tags) || args.tags.some((tag) => typeof tag !== 'object')))\n\t\treturn 'Tags must be an array of objects';\n\tif ('src' in args && typeof args.src !== 'string') return 'Source must be a valid string';\n\n\treturn null;\n}\n", "import { aoCreateProcess, aoDryRun, aoSend } from 'common/ao';\nimport { resolveTransaction } from 'common/arweave';\n\nimport { AO, TAGS } from 'helpers/config';\nimport { getTxEndpoint } from 'helpers/endpoints';\nimport { CollectionDetailType, CollectionType, DependencyType, TagType } from 'helpers/types';\nimport { cleanProcessField, cleanTagValue, globalLog } from 'helpers/utils';\n\nconst DEFAULT_COLLECTION_BANNER = 'eXCtpVbcd_jZ0dmU2PZ8focaKxBGECBQ8wMib7sIVPo';\nconst DEFAULT_COLLECTION_THUMBNAIL = 'lJovHqM9hwNjHV5JoY9NGWtt0WD-5D4gOqNL2VWW5jk';\n\nexport function createCollectionWith(deps: DependencyType) {\n\treturn async (args: {\n\t\ttitle: string;\n\t\tdescription: string;\n\t\tcreator: string;\n\t\tthumbnail: any;\n\t\tbanner: any;\n\t\tskipRegistry?: boolean;\n\t\tskipActivity?: boolean;\n\t}, callback?: (status: any) => void) => {\n\t\tif (!deps.signer) throw new Error(`No signer provided`);\n\n\t\tconst dateTime = new Date().getTime().toString();\n\t\tconst tags: TagType[] = [\n\t\t\t{ name: TAGS.keys.contentType, value: 'application/json' },\n\t\t\t{ name: TAGS.keys.creator, value: args.creator },\n\t\t\t{\n\t\t\t\tname: TAGS.keys.ans110.title,\n\t\t\t\tvalue: cleanTagValue(args.title),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: TAGS.keys.ans110.description,\n\t\t\t\tvalue: cleanTagValue(args.description),\n\t\t\t},\n\t\t\t{ name: TAGS.keys.ans110.type, value: TAGS.values.document },\n\t\t\t{ name: TAGS.keys.dateCreated, value: dateTime },\n\t\t\t{\n\t\t\t\tname: TAGS.keys.name,\n\t\t\t\tvalue: cleanTagValue(args.title),\n\t\t\t},\n\t\t\t{ name: 'Action', value: 'Add-Collection' },\n\t\t];\n\n\t\tlet thumbnailTx = null;\n\t\tlet bannerTx = null;\n\n\t\ttry {\n\t\t\tthumbnailTx = args.banner ? await resolveTransaction(deps, args.thumbnail) : DEFAULT_COLLECTION_THUMBNAIL;\n\t\t\tbannerTx = args.banner ? await resolveTransaction(deps, args.banner) : DEFAULT_COLLECTION_BANNER;\n\n\t\t\tif (args.thumbnail)\n\t\t\t\ttags.push({\n\t\t\t\t\tname: TAGS.keys.thumbnail,\n\t\t\t\t\tvalue: thumbnailTx,\n\t\t\t\t});\n\n\t\t\tif (args.banner)\n\t\t\t\ttags.push({\n\t\t\t\t\tname: TAGS.keys.banner,\n\t\t\t\t\tvalue: bannerTx,\n\t\t\t\t});\n\t\t}\n\t\tcatch (e: any) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\tconst processSrcFetch = await fetch(getTxEndpoint(AO.src.collection));\n\t\tif (!processSrcFetch.ok) throw new Error(`Unable to fetch process src`);\n\n\t\tlet processSrc = await processSrcFetch.text();\n\n\t\tprocessSrc = processSrc.replace(/'<NAME>'/g, cleanProcessField(args.title));\n\t\tprocessSrc = processSrc.replace(/'<DESCRIPTION>'/g, cleanProcessField(args.description));\n\t\tprocessSrc = processSrc.replace(/<CREATOR>/g, args.creator);\n\t\tprocessSrc = processSrc.replace(/<THUMBNAIL>/g, thumbnailTx ? thumbnailTx : DEFAULT_COLLECTION_THUMBNAIL);\n\t\tprocessSrc = processSrc.replace(/<BANNER>/g, bannerTx ? bannerTx : DEFAULT_COLLECTION_THUMBNAIL);\n\t\tprocessSrc = processSrc.replace(/<DATECREATED>/g, dateTime);\n\t\tprocessSrc = processSrc.replace(/<LASTUPDATE>/g, dateTime);\n\n\t\ttry {\n\t\t\tconst collectionId = await aoCreateProcess(\n\t\t\t\tdeps,\n\t\t\t\t{ tags: tags },\n\t\t\t\tcallback ? (status) => callback(status) : undefined,\n\t\t\t);\n\n\t\t\tglobalLog('Sending eval message to collection...');\n\t\t\tif (callback) callback('Sending eval message to collection...');\n\t\t\tawait deps.ao.message({\n\t\t\t\tprocess: collectionId,\n\t\t\t\tsigner: deps.signer,\n\t\t\t\ttags: [{ name: 'Action', value: 'Eval' }],\n\t\t\t\tdata: processSrc,\n\t\t\t});\n\n\t\t\tif (!args.skipRegistry) {\n\t\t\t\tglobalLog('Sending collection to registry...');\n\t\t\t\tif (callback) callback('Sending collection to registry...');\n\n\t\t\t\tconst registryTags = [\n\t\t\t\t\t{ name: 'Action', value: 'Add-Collection' },\n\t\t\t\t\t{ name: 'CollectionId', value: collectionId },\n\t\t\t\t\t{ name: 'Name', value: cleanTagValue(args.title) },\n\t\t\t\t\t{ name: 'Creator', value: args.creator },\n\t\t\t\t\t{ name: 'DateCreated', value: dateTime },\n\t\t\t\t];\n\t\n\t\t\t\tif (bannerTx) registryTags.push({ name: 'Banner', value: bannerTx });\n\t\t\t\tif (thumbnailTx) registryTags.push({ name: 'Thumbnail', value: thumbnailTx });\n\n\t\t\t\tawait deps.ao.message({\n\t\t\t\t\tprocess: AO.collectionRegistry,\n\t\t\t\t\tsigner: deps.signer,\n\t\t\t\t\ttags: registryTags,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!args.skipActivity) {\n\t\t\t\tglobalLog('Creating collection activity process...');\n\t\t\t\tif (callback) callback('Creating collection activity process...');\n\t\t\t\t\n\t\t\t\tconst activityTags = [\n\t\t\t\t\t{ name: 'CollectionId', value: collectionId },\n\t\t\t\t\t{ name: 'DateCreated', value: dateTime },\n\t\t\t\t\t{ name: 'On-Boot', value: AO.src.collectionActivity },\n\t\t\t\t];\n\t\t\t\t\n\t\t\t\tconst collectionActivityId = await aoCreateProcess(\n\t\t\t\t\tdeps,\n\t\t\t\t\t{ tags: activityTags },\n\t\t\t\t\tcallback ? (status) => callback(status) : undefined,\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\tglobalLog('Adding activity to collection process...');\n\t\t\t\tif (callback) callback('Adding activity to collection process...');\n\t\t\t\tawait deps.ao.message({\n\t\t\t\t\tprocess: collectionId,\n\t\t\t\t\tsigner: deps.signer,\n\t\t\t\t\ttags: [{ name: 'Action', value: 'Eval' }],\n\t\t\t\t\tdata: `ActivityProcess = '${collectionActivityId}'`,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn collectionId;\n\t\t}\n\t\tcatch (e: any) {\n\t\t\tthrow new Error(e.message ?? 'Error creating collection')\n\t\t}\n\t};\n}\n\nexport function updateCollectionAssetsWith(deps: DependencyType) {\n\treturn async (args: { collectionId: string; assetIds: string[]; creator: string; updateType: 'Add' | 'Remove' }): Promise<string> => {\n\t\treturn await aoSend(deps, {\n\t\t\tprocessId: args.creator,\n\t\t\taction: 'Run-Action',\n\t\t\ttags: [\n\t\t\t\t{ name: 'ForwardTo', value: args.collectionId },\n\t\t\t\t{ name: 'ForwardAction', value: 'Update-Assets' }\n\t\t\t],\n\t\t\tdata: {\n\t\t\t\tTarget: args.collectionId,\n\t\t\t\tAction: 'Update-Assets',\n\t\t\t\tInput: JSON.stringify({\n\t\t\t\t\tAssetIds: args.assetIds,\n\t\t\t\t\tUpdateType: args.updateType,\n\t\t\t\t}),\n\t\t\t},\n\t\t});\n\t};\n}\n\nexport function getCollectionWith(deps: DependencyType) {\n\treturn async (collectionId: string): Promise<CollectionDetailType | null> => {\n\t\tconst response = await aoDryRun(deps, {\n\t\t\tprocessId: collectionId,\n\t\t\taction: 'Info',\n\t\t});\n\n\t\tconst collection = {\n\t\t\tid: collectionId,\n\t\t\ttitle: response.Name,\n\t\t\tdescription: response.Description,\n\t\t\tcreator: response.Creator,\n\t\t\tdateCreated: response.DateCreated,\n\t\t\tthumbnail: response.Thumbnail ?? DEFAULT_COLLECTION_THUMBNAIL,\n\t\t\tbanner: response.Banner ?? DEFAULT_COLLECTION_THUMBNAIL,\n\t\t};\n\n\t\treturn {\n\t\t\t...collection,\n\t\t\tassetIds: response.Assets,\n\t\t};\n\t};\n}\n\nexport function getCollectionsWith(deps: DependencyType) {\n\treturn async (args: { creator?: string }): Promise<CollectionType[] | null> => {\n\t\tconst action = args.creator ? 'Get-Collections-By-User' : 'Get-Collections';\n\n\t\tconst response = await aoDryRun(deps, {\n\t\t\tprocessId: AO.collectionRegistry,\n\t\t\taction: action,\n\t\t\ttags: args.creator ? [{ name: 'Creator', value: args.creator }] : null,\n\t\t});\n\n\t\tif (response && response.Collections && response.Collections.length) {\n\t\t\tconst collections = response.Collections.map((collection: any) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: collection.Id,\n\t\t\t\t\ttitle: collection.Name.replace(/\\[|\\]/g, ''),\n\t\t\t\t\tdescription: collection.Description,\n\t\t\t\t\tcreator: collection.Creator,\n\t\t\t\t\tdateCreated: collection.DateCreated,\n\t\t\t\t\tbanner: collection.Banner,\n\t\t\t\t\tthumbnail: collection.Thumbnail,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\treturn collections;\n\t\t}\n\n\t\treturn null;\n\t};\n}\n", "import { getGQLData } from 'common/gql';\n\nimport { GATEWAYS } from 'helpers/config';\nimport { getTxEndpoint } from 'helpers/endpoints';\nimport {\n\tAssetCreateArgsType,\n\tCommentCreateArgType,\n\tCommentDetailType,\n\tDependencyType,\n\tGQLNodeResponseType,\n\tTagFilterType,\n} from 'helpers/types';\n\nimport { buildAsset, createAtomicAssetWith, getAtomicAsset } from './assets';\n\nexport function createCommentWith(deps: DependencyType) {\n\tconst createAtomicAsset = createAtomicAssetWith(deps);\n\treturn async (args: CommentCreateArgType, callback?: (status: any) => void) => {\n\t\tconst tags = args.tags ? args.tags : [];\n\n\t\ttags.push({ name: 'Data-Source', value: args.parentId });\n\t\ttags.push({ name: 'Root-Source', value: args.rootId ?? args.parentId });\n\n\t\tconst assetArgs: AssetCreateArgsType = {\n\t\t\tname: `Comment on ${args.parentId}`,\n\t\t\tdescription: `Comment on ${args.parentId}`,\n\t\t\ttopics: ['comment'],\n\t\t\tcreator: args.creator,\n\t\t\tdata: args.content,\n\t\t\tcontentType: 'text/plain',\n\t\t\tassetType: 'comment',\n\t\t\ttags,\n\t\t};\n\n\t\treturn createAtomicAsset(assetArgs, callback);\n\t};\n}\n\nexport function getCommentWith(deps: DependencyType) {\n\treturn async (id: string): Promise<CommentDetailType | null> => {\n\t\ttry {\n\t\t\tconst asset: any = await getAtomicAsset(deps, id, { useGateway: true });\n\n\t\t\tconst dataSource = asset?.dataSource\n\t\t\tconst rootSource = asset?.rootSource\n\n\t\t\tif (!dataSource || !rootSource) throw new Error(`dataSource and rootSource must be present on a comment`);\n\n\t\t\treturn {\n\t\t\t\tcontent: await getCommentData(id),\n\t\t\t\tparentId: dataSource,\n\t\t\t\trootId: rootSource,\n\t\t\t};\n\t\t}\n\t\tcatch (e: any) {\n\t\t\tthrow new Error(e.message ?? 'Error getting comment');\n\t\t}\n\t};\n}\n\nexport function getCommentsWith(_deps: DependencyType) {\n\treturn async (args: { parentId?: string; rootId?: string }) => {\n\t\tif (!args.parentId && !args.rootId) {\n\t\t\tthrow new Error(`Must provide either parentId or rootId`);\n\t\t}\n\n\t\tconst tags: TagFilterType[] = [];\n\n\t\tif (args.parentId)\n\t\t\ttags.push({\n\t\t\t\tname: 'Data-Source',\n\t\t\t\tvalues: [args.parentId ?? ''],\n\t\t\t});\n\n\t\tif (args.rootId)\n\t\t\ttags.push({\n\t\t\t\tname: 'Root-Source',\n\t\t\t\tvalues: [args.rootId ?? ''],\n\t\t\t});\n\n\t\tconst gqlResponse = await getGQLData({\n\t\t\tgateway: GATEWAYS.goldsky,\n\t\t\tids: null,\n\t\t\ttags,\n\t\t\towners: null,\n\t\t\tcursor: null,\n\t\t});\n\n\t\tlet assets: any[] = [];\n\n\t\tif (gqlResponse && gqlResponse.data.length) {\n\t\t\tassets = gqlResponse.data.map((element: GQLNodeResponseType) => buildAsset(element));\n\t\t}\n\n\t\tconst comments = [];\n\t\tfor (const asset of assets) {\n\t\t\tconst dataSource = asset?.dataSource;\n\t\t\tconst rootSource = asset?.rootSource;\n\n\t\t\tif (!dataSource || !rootSource) throw new Error(`dataSource and rootSource must be present on a comment`);\n\n\t\t\tcomments.push({\n\t\t\t\tid: asset.id,\n\t\t\t\tcontent: await getCommentData(asset.id),\n\t\t\t\tparentId: dataSource,\n\t\t\t\trootId: rootSource,\n\t\t\t})\n\t\t}\n\n\t\treturn comments;\n\t};\n}\n\nasync function getCommentData(id: string) {\n\ttry {\n\t\treturn await (await fetch(getTxEndpoint(id))).text();\n\t}\n\tcatch (e: any) {\n\t\tthrow new Error(e.message ?? 'Error getting comment data')\n\t}\n}\n", "import { aoCreateProcess, aoDryRun, aoSend } from 'common/ao';\nimport { resolveTransaction } from 'common/arweave';\nimport { getGQLData } from 'common/gql';\n\nimport { AO, GATEWAYS, TAGS } from 'helpers/config';\nimport { DependencyType, GQLNodeResponseType, ProfileArgsType, ProfileType } from 'helpers/types';\nimport { getBootTag, globalLog, mapFromProcessCase } from 'helpers/utils';\n\nimport { createZoneWith, getZoneWith, updateZoneWith } from './zones';\n\nexport function createProfileWith(deps: DependencyType) {\n\treturn async (args: ProfileArgsType, callback?: (status: any) => void): Promise<string | null> => {\n\t\ttry {\n\t\t\tif (!deps.signer) throw new Error(`No signer provided`);\n\n\t\t\tconst dateTime = new Date().getTime().toString();\n\t\t\tconst tags: { name: string; value: string }[] = [\n\t\t\t\t{ name: 'Date-Created', value: dateTime },\n\t\t\t\t{ name: 'Action', value: 'Create-Profile' },\n\t\t\t];\n\n\t\t\tlet thumbnailTx = null;\n\t\t\tlet bannerTx = null;\n\n\t\t\ttry {\n\t\t\t\tif (args.thumbnail) thumbnailTx = await resolveTransaction(deps, args.thumbnail);\n\t\t\t\tif (args.banner) bannerTx = await resolveTransaction(deps, args.banner);\n\t\t\t}\n\t\t\tcatch (e: any) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\n\t\t\tconst profileId = await aoCreateProcess(deps, {\n\t\t\t\ttags: tags,\n\t\t\t\tevalTxId: AO.src.profile\n\t\t\t}, (status: any) => globalLog(status));\n\n\t\t\tconst updateData: any = {\n\t\t\t\tUserName: args.userName,\n\t\t\t\tDisplayName: args.displayName,\n\t\t\t\tDescription: args.description\n\t\t\t}\n\n\t\t\tif (thumbnailTx) updateData.ProfileImage = thumbnailTx;\n\t\t\tif (bannerTx) updateData.CoverImage = bannerTx;\n\n\t\t\tglobalLog('Updating profile...');\n\t\t\tif (callback) callback('Updating profile...');\n\t\t\tconst profileUpdateId = await aoSend(deps, {\n\t\t\t\tprocessId: profileId,\n\t\t\t\taction: 'Update-Profile',\n\t\t\t\tdata: updateData\n\t\t\t});\n\t\t\tglobalLog(`Profile update: ${profileUpdateId}`);\n\n\t\t\treturn profileId;\n\t\t} catch (e: any) {\n\t\t\tthrow new Error(e.message ?? 'Error creating profile');\n\t\t}\n\t};\n}\n\nexport function updateProfileWith(deps: DependencyType) {\n\treturn async (args: ProfileArgsType, profileId: string, callback?: (status: any) => void): Promise<string | null> => {\n\t\tif (profileId) {\n\t\t\tlet updateData: any = {\n\t\t\t\tUserName: args.userName,\n\t\t\t\tDisplayName: args.displayName,\n\t\t\t\tDescription: args.description,\n\t\t\t};\n\n\t\t\tif (args.thumbnail) {\n\t\t\t\ttry {\n\t\t\t\t\tupdateData.Thumbnail = await resolveTransaction(deps, args.thumbnail);\n\t\t\t\t} catch (e: any) {\n\t\t\t\t\tif (callback) callback(`Failed to resolve thumbnail: ${e.message}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (args.banner) {\n\t\t\t\ttry {\n\t\t\t\t\tupdateData.Banner = await resolveTransaction(deps, args.banner);\n\t\t\t\t} catch (e: any) {\n\t\t\t\t\tif (callback) callback(`Failed to resolve banner: ${e.message}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tglobalLog('Updating profile...');\n\t\t\t\tif (callback) callback('Updating profile...');\n\t\t\t\tconst profileUpdateId = await aoSend(deps, {\n\t\t\t\t\tprocessId: profileId,\n\t\t\t\t\taction: 'Update-Profile',\n\t\t\t\t\tdata: updateData\n\t\t\t\t});\n\t\t\t\tglobalLog(`Profile update: ${profileUpdateId}`);\n\t\t\t\treturn profileUpdateId;\n\t\t\t} catch (e: any) {\n\t\t\t\tthrow new Error(e.message ?? 'Error updating profile');\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error('No profile provided');\n\t\t}\n\t};\n}\n\nexport function getProfileByIdWith(deps: DependencyType) {\n\treturn async (profileId: string): Promise<ProfileType | null> => {\n\t\ttry {\n\t\t\tconst processInfo = await aoDryRun(deps, {\n\t\t\t\tprocessId: profileId,\n\t\t\t\taction: 'Info',\n\t\t\t});\n\t\t\tconst { Profile = {}, ...rest } = processInfo;\n\t\t\tconst flattenedProcessInfo = { ...rest, ...Profile };\n\t\t\treturn { id: profileId, ...mapFromProcessCase(flattenedProcessInfo) };\n\t\t} catch (e: any) {\n\t\t\tthrow new Error(e.message ?? 'Error fetching profile');\n\t\t}\n\t};\n}\n\nexport function getProfileByWalletAddressWith(deps: DependencyType) {\n\tconst getProfileById = getProfileByIdWith(deps);\n\n\treturn async (walletAddress: string): Promise<(ProfileType & any) | null> => {\n\t\ttry {\n\t\t\tconst profileLookup = await aoDryRun(deps, {\n\t\t\t\tprocessId: AO.profileRegistry,\n\t\t\t\taction: 'Get-Profiles-By-Delegate',\n\t\t\t\tdata: { Address: walletAddress }\n\t\t\t});\n\n\t\t\tlet activeProfileId: string;\n\t\t\tif (profileLookup && profileLookup.length > 0 && profileLookup[0].ProfileId) {\n\t\t\t\tactiveProfileId = profileLookup[0].ProfileId;\n\t\t\t\treturn await getProfileById(activeProfileId);\n\t\t\t}\n\t\t} catch (e: any) {\n\t\t\tthrow new Error(e.message ?? 'Error fetching profile');\n\t\t}\n\t};\n}\n\nexport function createProfileWith_ZONE(deps: DependencyType) {\n\tconst createZone = createZoneWith(deps);\n\n\treturn async (args: ProfileArgsType, callback?: (status: any) => void): Promise<string | null> => {\n\t\tlet profileId: string | null = null;\n\n\t\tconst tags: { name: string; value: string }[] = [\n\t\t\t{ name: TAGS.keys.dataProtocol, value: 'Zone' },\n\t\t\t{ name: TAGS.keys.zoneType, value: 'User' },\n\t\t];\n\n\t\tconst addImageTag = async (imageKey: 'Thumbnail' | 'Banner') => {\n\t\t\tconst key: any = imageKey.toLowerCase();\n\t\t\tif ((args as any)[key]) {\n\t\t\t\ttry {\n\t\t\t\t\tconst resolvedImage = await resolveTransaction(deps, (args as any)[key]);\n\t\t\t\t\ttags.push(getBootTag(imageKey, resolvedImage));\n\t\t\t\t} catch (e: any) {\n\t\t\t\t\tif (callback) callback(`Failed to resolve ${imageKey}: ${e.message}`);\n\t\t\t\t\telse console.error(e);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\ttags.push(getBootTag('Username', args.userName));\n\t\ttags.push(getBootTag('DisplayName', args.displayName));\n\t\ttags.push(getBootTag('Description', args.description));\n\n\t\tawait Promise.all([addImageTag('Thumbnail'), addImageTag('Banner')]);\n\n\t\ttry {\n\t\t\tprofileId = await createZone({ tags: tags }, callback);\n\t\t} catch (e: any) {\n\t\t\tthrow new Error(e.message ?? 'Error creating profile');\n\t\t}\n\n\t\treturn profileId;\n\t};\n}\n\nexport function updateProfileWith_ZONE(deps: DependencyType) {\n\tconst updateZone = updateZoneWith(deps);\n\n\treturn async (args: ProfileArgsType, profileId: string, callback?: (status: any) => void): Promise<string | null> => {\n\t\tif (profileId) {\n\t\t\tlet data: any = {\n\t\t\t\tUsername: args.userName,\n\t\t\t\tDisplayName: args.displayName,\n\t\t\t\tDescription: args.description,\n\t\t\t};\n\n\t\t\tif (args.thumbnail) {\n\t\t\t\ttry {\n\t\t\t\t\tdata.Thumbnail = await resolveTransaction(deps, args.thumbnail);\n\t\t\t\t} catch (e: any) {\n\t\t\t\t\tif (callback) callback(`Failed to resolve thumbnail: ${e.message}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (args.banner) {\n\t\t\t\ttry {\n\t\t\t\t\tdata.Banner = await resolveTransaction(deps, args.banner);\n\t\t\t\t} catch (e: any) {\n\t\t\t\t\tif (callback) callback(`Failed to resolve banner: ${e.message}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\treturn await updateZone(data, profileId);\n\t\t\t} catch (e: any) {\n\t\t\t\tthrow new Error(e.message ?? 'Error creating profile');\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error('No profile provided');\n\t\t}\n\t};\n}\n\nexport function getProfileByIdWith_ZONE(deps: DependencyType) {\n\tconst getZone = getZoneWith(deps);\n\n\treturn async (profileId: string): Promise<ProfileType | null> => {\n\t\ttry {\n\t\t\tconst zone = await getZone(profileId);\n\t\t\treturn { id: profileId, ...zone.store, assets: zone.assets };\n\t\t} catch (e: any) {\n\t\t\tthrow new Error(e.message ?? 'Error fetching profile');\n\t\t}\n\t};\n}\n\nexport function getProfileByWalletAddressWith_ZONE(deps: DependencyType) {\n\tconst getProfileById = getProfileByIdWith(deps);\n\n\treturn async (walletAddress: string): Promise<(ProfileType & any) | null> => {\n\t\ttry {\n\t\t\tconst gqlResponse = await getGQLData({\n\t\t\t\tgateway: GATEWAYS.goldsky,\n\t\t\t\ttags: [\n\t\t\t\t\t{ name: TAGS.keys.dataProtocol, values: ['Zone'] },\n\t\t\t\t\t{ name: TAGS.keys.zoneType, values: ['User'] },\n\t\t\t\t],\n\t\t\t\towners: [walletAddress],\n\t\t\t});\n\n\t\t\tif (gqlResponse?.data?.length > 0) {\n\t\t\t\tgqlResponse.data.sort((a: GQLNodeResponseType, b: GQLNodeResponseType) => {\n\t\t\t\t\tconst timestampA = a.node.block?.timestamp ?? 0;\n\t\t\t\t\tconst timestampB = b.node.block?.timestamp ?? 0;\n\t\t\t\t\treturn timestampB - timestampA;\n\t\t\t\t});\n\n\t\t\t\treturn await getProfileById(gqlResponse.data[0].node.id);\n\t\t\t}\n\n\t\t\treturn { id: null };\n\t\t} catch (e: any) {\n\t\t\tthrow new Error(e.message ?? 'Error fetching profile');\n\t\t}\n\t};\n}\n", "import { aoCreateProcess, aoDryRun, aoSend } from 'common/ao';\n\nimport { AO, TAGS } from 'helpers/config';\nimport { DependencyType, TagType } from 'helpers/types';\nimport { mapFromProcessCase } from 'helpers/utils';\n\nexport function createZoneWith(deps: DependencyType) {\n\treturn async (args: { tags?: TagType[] }, callback?: (status: any) => void): Promise<string | null> => {\n\t\ttry {\n\t\t\tconst tags = [{ name: TAGS.keys.bootloaderInit, value: AO.src.zone }];\n\t\t\tif (args.tags && args.tags.length) args.tags.forEach((tag: TagType) => tags.push(tag));\n\n\t\t\tconst zoneId = await aoCreateProcess(\n\t\t\t\tdeps,\n\t\t\t\t{ tags: tags },\n\t\t\t\tcallback ? (status) => callback(status) : undefined,\n\t\t\t);\n\n\t\t\treturn zoneId;\n\t\t} catch (e: any) {\n\t\t\tthrow new Error(e.message ?? 'Error creating zone');\n\t\t}\n\t};\n}\n\nexport function updateZoneWith(deps: DependencyType) {\n\treturn async (args: object, zoneId: string): Promise<string | null> => {\n\t\ttry {\n\t\t\tconst mappedData = Object.entries(args).map(([key, value]) => ({ key, value }));\n\n\t\t\tconst zoneUpdateId = await aoSend(deps, {\n\t\t\t\tprocessId: zoneId,\n\t\t\t\taction: 'Zone-Update',\n\t\t\t\tdata: mappedData,\n\t\t\t});\n\n\t\t\treturn zoneUpdateId;\n\t\t} catch (e: any) {\n\t\t\tthrow new Error(e);\n\t\t}\n\t};\n}\n\nexport function addToZoneWith(deps: DependencyType) {\n\treturn async (args: { path: string; data: object }, zoneId: string): Promise<string | null> => {\n\t\ttry {\n\t\t\tconst zoneUpdateId = await aoSend(deps, {\n\t\t\t\tprocessId: zoneId,\n\t\t\t\taction: 'Zone-Append',\n\t\t\t\ttags: [{ name: 'Path', value: args.path }],\n\t\t\t\tdata: args.data,\n\t\t\t});\n\n\t\t\treturn zoneUpdateId;\n\t\t} catch (e: any) {\n\t\t\tthrow new Error(e);\n\t\t}\n\t};\n}\n\nexport function getZoneWith(deps: DependencyType) {\n\treturn async (zoneId: string): Promise<any | null> => {\n\t\ttry {\n\t\t\tconst processInfo = await aoDryRun(deps, {\n\t\t\t\tprocessId: zoneId,\n\t\t\t\taction: 'Info',\n\t\t\t});\n\n\t\t\treturn mapFromProcessCase(processInfo);\n\t\t} catch (e: any) {\n\t\t\tthrow new Error(e);\n\t\t}\n\t};\n}\n"],
  "mappings": "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",
  "names": ["require_browser", "__commonJSMin", "exports", "module", "process", "cachedSetTimeout", "cachedClearTimeout", "defaultSetTimout", "defaultClearTimeout", "runTimeout", "fun", "runClearTimeout", "marker", "queue", "draining", "currentQueue", "queueIndex", "cleanUpNextTick", "drainQueue", "timeout", "len", "args", "i", "Item", "array", "noop", "name", "dir", "import_browser", "Buffer", "import_browser", "import_browser", "AO", "CONTENT_TYPES", "data", "GATEWAYS", "TAGS", "UPLOAD", "import_browser", "import_browser", "checkValidAddress", "address", "getTagValue", "list", "name", "i", "getDataURLContentType", "dataURL", "result", "getBase64Data", "getByteSize", "input", "sizeInBytes", "cleanProcessField", "value", "updatedValue", "cleanTagValue", "globalLog", "args", "toProcessCase", "str", "match", "mapToProcessCase", "obj", "acc", "key", "value", "toKey", "checkValidAddress", "fromProcessCase", "mapFromProcessCase", "fromKey", "getBootTag", "capitalizedKey", "TAGS", "arweaveEndpoint", "getTxEndpoint", "txId", "arweaveEndpoint", "import_browser", "import_browser", "import_browser", "import_browser", "CURSORS", "PAGINATORS", "getGQLData", "args", "paginator", "data", "count", "nextCursor", "queryBody", "getQueryBody", "response", "getResponse", "GATEWAYS", "getQuery", "e", "getAggregatedGQLData", "callback", "index", "fetchResult", "aggregatedData", "getQuery", "body", "query", "getQueryBody", "args", "paginator", "PAGINATORS", "ids", "blockFilter", "blockFilterStr", "tags", "owners", "recipients", "cursor", "CURSORS", "fetchCount", "txCount", "nodeFields", "order", "recipientsfield", "GATEWAYS", "getResponse", "e", "GATEWAY", "GATEWAYS", "GATEWAY_RETRY_COUNT", "aoSpawn", "deps", "args", "tags", "AO", "tag", "processId", "globalLog", "e", "aoSendWith", "aoSend", "data", "aoDryRunWith", "aoDryRun", "dataPayload", "response", "acc", "item", "aoMessageResult", "Messages", "message", "action", "getTagValue", "responseData", "messageData", "responseStatus", "responseMessage", "handleProcessEval", "deps", "args", "src", "fetchProcessSrc", "evalMessage", "aoSend", "globalLog", "aoMessageResult", "e", "aoCreateProcessWith", "statusCB", "spawnArgs", "AO", "processId", "aoSpawn", "waitForProcess", "aoCreateProcess", "_setStatus", "retries", "GATEWAY_RETRY_COUNT", "r", "gqlResponse", "getGQLData", "GATEWAY", "foundProcess", "txId", "getTxEndpoint", "import_browser", "resolveTransactionWith", "deps", "data", "checkValidAddress", "createTransaction", "e", "resolveTransaction", "args", "content", "contentType", "getBase64Data", "getDataURLContentType", "contentSize", "getByteSize", "globalLog", "UPLOAD", "tx", "TAGS", "tag", "import_browser", "import_browser", "createAtomicAssetWith", "deps", "args", "callback", "validationError", "getValidationErrorMessage", "data", "CONTENT_TYPES", "tags", "buildAssetCreateTags", "aoCreateProcess", "status", "e", "getAtomicAsset", "id", "processInfo", "mapFromProcessCase", "aoDryRun", "gqlResponse", "getGQLData", "GATEWAYS", "buildAsset", "getAtomicAssetWith", "getAtomicAssets", "ids", "element", "asset", "tag", "originalKey", "formattedKey", "TAGS", "part", "index", "decodedValue", "AO", "getBootTag", "entry", "mapToProcessCase", "requiredFields", "field", "import_browser", "DEFAULT_COLLECTION_BANNER", "DEFAULT_COLLECTION_THUMBNAIL", "createCollectionWith", "deps", "args", "callback", "dateTime", "tags", "TAGS", "cleanTagValue", "thumbnailTx", "bannerTx", "resolveTransaction", "e", "processSrcFetch", "getTxEndpoint", "AO", "processSrc", "cleanProcessField", "collectionId", "aoCreateProcess", "status", "globalLog", "registryTags", "activityTags", "collectionActivityId", "updateCollectionAssetsWith", "aoSend", "getCollectionWith", "response", "aoDryRun", "getCollectionsWith", "action", "collection", "import_browser", "createCommentWith", "deps", "createAtomicAsset", "createAtomicAssetWith", "args", "callback", "tags", "assetArgs", "getCommentWith", "id", "asset", "getAtomicAsset", "dataSource", "rootSource", "getCommentData", "e", "getCommentsWith", "_deps", "gqlResponse", "getGQLData", "GATEWAYS", "assets", "element", "buildAsset", "comments", "getTxEndpoint", "import_browser", "import_browser", "createZoneWith", "deps", "args", "callback", "tags", "TAGS", "AO", "tag", "aoCreateProcess", "status", "e", "updateZoneWith", "zoneId", "mappedData", "key", "value", "aoSend", "addToZoneWith", "getZoneWith", "processInfo", "aoDryRun", "mapFromProcessCase", "createProfileWith", "deps", "args", "callback", "tags", "thumbnailTx", "bannerTx", "resolveTransaction", "e", "profileId", "aoCreateProcess", "AO", "status", "globalLog", "updateData", "profileUpdateId", "aoSend", "updateProfileWith", "getProfileByIdWith", "processInfo", "aoDryRun", "Profile", "rest", "flattenedProcessInfo", "mapFromProcessCase", "getProfileByWalletAddressWith", "getProfileById", "walletAddress", "profileLookup", "activeProfileId", "Buffer", "init", "deps", "createZoneWith", "updateZoneWith", "addToZoneWith", "getZoneWith", "createProfileWith", "updateProfileWith", "getProfileByIdWith", "getProfileByWalletAddressWith", "createAtomicAssetWith", "getAtomicAssetWith", "getAtomicAssets", "createCommentWith", "getCommentWith", "getCommentsWith", "createCollectionWith", "updateCollectionAssetsWith", "getCollectionWith", "getCollectionsWith", "resolveTransactionWith", "getGQLData", "getAggregatedGQLData", "aoCreateProcessWith", "aoDryRunWith", "aoSendWith", "mapFromProcessCase", "mapToProcessCase", "index_default"]
}
